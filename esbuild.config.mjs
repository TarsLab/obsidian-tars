import process from 'node:process'
import builtins from 'builtin-modules'
import esbuild from 'esbuild'

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`

const prod = process.argv[2] === 'production'

const context = await esbuild.context({
	banner: {
		js: banner
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins,
		// Node built-ins with node: prefix (for MCP SDK)
		'node:process',
		'node:stream',
		'node:events',
		'node:buffer',
		'node:util',
		'node:fs',
		'node:path',
		'node:http',
		'node:https',
		'node:net',
		'node:tls',
		'node:crypto',
		'node:os',
		'node:child_process'
	],
	format: 'cjs',
	platform: 'node', // Obsidian runs on Electron (Node.js environment)
	target: 'es2018',
	logLevel: 'info',
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'dist/main.js',
	minify: prod
})

if (prod) {
	await context.rebuild()
	process.exit(0)
} else {
	await context.watch()
}
